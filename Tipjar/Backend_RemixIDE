// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract TipJar {
    address public owner;

    event TipReceived(address indexed from, uint256 amount);

    constructor() {
        owner = msg.sender;
    }

    // Function to send a tip (anyone can call this with SHM)
    function sendTip() public payable {
        require(msg.value > 0, "Send some SHM!");
        emit TipReceived(msg.sender, msg.value);
    }

    // Function to withdraw all tips (only owner can call)
    function withdraw() public {
        require(msg.sender == owner, "Only owner can withdraw");
        payable(owner).transfer(address(this).balance);
    } 

    // View function to check how much SHM is in the jar
    function getBalance() public view returns (uint256) {
        return address(this).balance;
    }
}
